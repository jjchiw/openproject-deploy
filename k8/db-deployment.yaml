apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: pgdata
  name: pgdata
  namespace: openproject
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: openproject
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.1 (HEAD)
  labels:
    io.kompose.service: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.26.1 (HEAD)
      labels:
        io.kompose.network/backend: "true"
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: openproject
            - name: POSTGRES_PASSWORD
              value: p4ssw0rd
          image: postgres:13
          name: db
          ports:
            - containerPort: 5432
          resources: {}
          # resources:
          #   limits:
          #     cpu: 2000m
          #     memory: 512Mi
          #   requests:
          #     cpu: 100m
          #     memory: 64Mi
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pgdata
      restartPolicy: Always
      terminationGracePeriodSeconds: 3
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
status: {}

---

apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: openproject
spec:
  type: ClusterIP
  selector:
    io.kompose.service: db
  ports:
    - port: 5432
      targetPort: 5432
