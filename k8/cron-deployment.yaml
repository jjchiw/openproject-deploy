apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: opdata
  name: opdata
  namespace: openproject
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.1 (HEAD)
  labels:
    io.kompose.service: cron
  name: cron
  namespace: openproject
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: cron
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.26.1 (HEAD)
      labels:
        io.kompose.network/backend: "true"
        io.kompose.service: cron
    spec:
      containers:
        - args:
            - ./docker/prod/cron
          env:
            - name: DATABASE_URL
              value: postgres://postgres:p4ssw0rd@db/openproject?pool=20&encoding=unicode&reconnect=true
            - name: IMAP_ENABLED
              value: "false"
            - name: OPENPROJECT_CACHE__MEMCACHE__SERVER
              value: cache:11211
            - name: OPENPROJECT_RAILS__RELATIVE__URL__ROOT
            - name: RAILS_CACHE_STORE
              value: memcache
            - name: RAILS_MAX_THREADS
              value: "16"
            - name: RAILS_MIN_THREADS
              value: "4"
          image: openproject/community:12
          name: cron
          resources: {}
          # resources:
          #   limits:
          #     cpu: 2000m
          #     memory: 512Mi
          #   requests:
          #     cpu: 100m
          #     memory: 64Mi
          volumeMounts:
            - mountPath: /var/openproject/assets
              name: opdata
      restartPolicy: Always
      volumes:
        - name: opdata
          persistentVolumeClaim:
            claimName: opdata
status: {}
